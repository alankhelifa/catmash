{"version":3,"sources":["assets/cat-logo.png","database/index.ts","stores/App.tsx","components/Cat/Cat.tsx","components/ProgressBar/ProgressBar.tsx","components/ScrollView/ScrollView.tsx","app/LoadingPage/LoadingPage.tsx","app/Root/Mash/index.tsx","app/Root/Ranking/index.tsx","app/Root/index.tsx","serviceWorker.js","index.tsx","app/index.tsx","assets/loader.gif"],"names":["module","exports","cats","version","stores","table","Dexie","random","i","Math","floor","APP_STATE","AppContext","React","createContext","appState","mash","nextMash","useApp","useContext","styles","css","Cat","className","id","image","onClick","variants","handleClick","useCallback","div","cx","initial","animate","exit","whileTap","style","backgroundImage","progressVariants","init","width","duration","transition","type","ease","ProgressBar","custom","ScrollView","children","enter","opacity","LoadingPage","label","timeout","src","loadingGif","alt","leftVariants","tap","scale","x","stiffness","damping","rightVariants","Mash","left","right","console","log","section","catLogo","exitBeforeEnter","key","to","listVariants","staggerChildren","staggerDirection","itemVariants","position","y","delay","velocity","Ranking","ul","layoutTransition","map","cat","index","li","Root","location","useLocation","pathname","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","useState","setAppState","setCats","setMash","length","useEffect","Promise","resolve","setTimeout","db","toArray","then","a","async","currentElo","value","date","Date","eloEvolution","bulkAdd","catsData","Provider","useDarkMode","undefined","document","getElementById","body","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82d00202.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat-logo.8fe55bbb.png\";","import Dexie from 'dexie';\nimport { Cat } from 'types/cat';\n\nclass CatMashDatabase extends Dexie {\n  cats: Dexie.Table<Cat, number>;\n\n  constructor() {\n    super('CatMashDB');\n    this.version(1).stores({\n      cats: '++id, image, currentElo, *eloEvolution',\n    });\n    this.cats = this.table('cats');\n  }\n}\n\nexport default new CatMashDatabase();\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Cats } from 'types/cat';\nimport db from 'database';\nimport catsData from 'assets/cats.json';\nimport { Elo } from 'types/Elo';\nimport { Mash } from 'types/Mash';\n\nconst START_ELO = 1000;\nconst LOADING_SCREEN_DURATION = 2500;\n\nconst init = async (): Promise<Cats> => {\n  const currentElo: Elo = { value: START_ELO, date: new Date() };\n  const eloEvolution = [currentElo];\n\n  await db.cats.bulkAdd(\n    catsData.map(image => ({\n      image,\n      currentElo,\n      eloEvolution,\n    })),\n  );\n\n  return new Promise<Cats>(resolve => {\n    setTimeout(() => {\n      resolve(db.cats.toArray());\n    }, 1200);\n  });\n};\n\nconst random = (i: number): number => {\n  return Math.floor(Math.random() * i);\n};\n\nexport const APP_STATE = {\n  LOADING: 'loading',\n  INITIALISING: 'init',\n  READY: 'ready',\n};\n\ntype AppContextType = {\n  appState: string;\n  cats: Cats;\n  mash?: Mash;\n  nextMash: Function;\n};\n\nexport const AppContext = React.createContext<AppContextType>({\n  appState: APP_STATE.LOADING,\n  cats: [],\n  mash: {} as Mash,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  nextMash: () => {},\n});\n\nexport const AppProvider: React.FC = ({ children }) => {\n  const [appState, setAppState] = useState(APP_STATE.LOADING);\n  const [cats, setCats] = useState<Cats>([]);\n  const [mash, setMash] = useState<Mash>();\n\n  const nextMash = useCallback(() => {\n    setMash({ left: cats[random(cats.length)], right: cats[random(cats.length)] });\n  }, [cats]);\n\n  useEffect(() => {\n    const loadCats = (): Promise<Cats> => {\n      return new Promise<Cats>(resolve => {\n        setTimeout(() => {\n          resolve(db.cats.toArray());\n        }, LOADING_SCREEN_DURATION);\n      });\n    };\n\n    if (cats.length === 0) {\n      loadCats().then(cats => {\n        if (cats.length !== 0) {\n          setCats(cats);\n        } else {\n          setAppState(APP_STATE.INITIALISING);\n        }\n      });\n    } else {\n      nextMash();\n      setAppState(APP_STATE.READY);\n    }\n  }, [cats, nextMash]);\n\n  useEffect(() => {\n    if (appState === APP_STATE.INITIALISING) {\n      init().then(cats => {\n        setCats(cats);\n        nextMash();\n        setAppState(APP_STATE.READY);\n      });\n    }\n  }, [appState, nextMash]);\n\n  return <AppContext.Provider value={{ appState, cats, mash, nextMash }}>{children}</AppContext.Provider>;\n};\n\nexport const useApp = (): AppContextType => React.useContext(AppContext);\n","import React, { useCallback } from 'react';\nimport { css, cx } from 'emotion';\nimport { motion, Variants } from 'framer-motion';\nimport { Cat as CatType } from 'types/cat';\n\nconst styles = css`\n  height: 120px;\n  width: 120px;\n  padding: 6px;\n  border-radius: 50%;\n  background-color: var(--secondary-color);\n  box-shadow: var(--box-shadow);\n\n  @media screen and (min-width: 992px) {\n    height: 240px;\n    width: 240px;\n  }\n\n  > div {\n    height: 100%;\n    width: 100%;\n    background-size: cover;\n    background-repeat: no-repeat;\n    border-radius: 50%;\n  }\n`;\n\ninterface Props extends CatType {\n  className?: string;\n  onClick?: (id: number | undefined) => void | undefined;\n  variants?: Variants;\n}\n\nexport const Cat: React.FC<Props> = ({ className, id, image, onClick, variants }) => {\n  const handleClick = useCallback(() => {\n    if (typeof onClick === 'function') {\n      onClick(id);\n    }\n  }, [id, onClick]);\n\n  return (\n    <motion.div\n      className={cx(styles, className, 'cat')}\n      onClick={handleClick}\n      initial=\"init\"\n      animate=\"enter\"\n      exit=\"exit\"\n      whileTap=\"tap\"\n      variants={variants}\n    >\n      <div style={{ backgroundImage: `url(${image})` }} />\n    </motion.div>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { css, cx } from 'emotion';\n\nconst progressVariants = {\n  init: { width: 0 },\n  animate: (duration: number): any => ({\n    width: '100%',\n    transition: {\n      type: 'tween',\n      ease: 'linear',\n      duration: duration / 1000,\n    },\n  }),\n};\n\nconst styles = css`\n  width: 90%;\n  max-width: 360px;\n  height: 3px;\n  background-color: var(--secondary-color);\n  position: relative;\n  border-radius: 2px;\n\n  > .progress-bar {\n    position: absolute;\n    height: 100%;\n    background-image: linear-gradient(to right, #3579d7, #3f6bdf, #585ae1, #7640de, #9400d3);\n    border-radius: 2px;\n  }\n`;\n\ninterface Props {\n  duration: number;\n}\n\nexport const ProgressBar: React.FC<Props> = ({ duration }) => {\n  return (\n    <div className={cx(styles, 'progress')}>\n      <motion.div\n        animate=\"animate\"\n        initial=\"init\"\n        className=\"progress-bar\"\n        variants={progressVariants}\n        custom={duration}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { css, cx } from 'emotion';\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\ninterface Props {\n  className?: string;\n}\n\nconst styles = css`\n  height: 100%;\n  max-width: 100%;\n  .simplebar-scrollbar {\n    width: 4px;\n    &.simplebar-visible::before {\n      opacity: 1;\n    }\n    &::before {\n      background-image: linear-gradient(to bottom, #3579d7, #3f6bdf, #585ae1, #7640de, #9400d3);;\n      width: 4px;\n    },\n  },\n`;\n\nexport const ScrollView: React.FC<Props> = ({ className, children }) => {\n  return <SimpleBar className={cx(styles, className)} children={children} />;\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport { motion } from 'framer-motion';\nimport loadingGif from 'assets/loader.gif';\nimport { ProgressBar } from 'components';\n\ninterface Props {\n  label?: string;\n  timeout: number;\n}\n\nconst styles = css`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  > img {\n    width: 60%;\n    max-width: 380px;\n  }\n\n  > .label {\n    margin-top: 50px;\n    height: 2rem;\n    font-size: 1.4rem;\n  }\n\n  > .progress {\n    margin-top: 50px;\n  }\n`;\n\nconst variants = {\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.4,\n    },\n  },\n  exit: {\n    opacity: 0,\n    transition: {\n      duration: 0.4,\n    },\n  },\n};\n\nexport const LoadingPage: React.FC<Props> = ({ label, timeout }) => {\n  return (\n    <motion.div className={styles} animate=\"enter\" exit=\"exit\" variants={variants}>\n      <img src={loadingGif} alt=\"Chargement...\" />\n      <div className=\"label\">{label}</div>\n      <ProgressBar duration={timeout} />\n    </motion.div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { css } from 'emotion';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport catLogo from 'assets/cat-logo.png';\nimport { useApp } from 'stores';\nimport { Cat } from 'components';\nimport { Cat as CatType } from 'types/cat';\n\nconst styles = css`\n  height: 100%;\n\n  > main {\n    position: relative;\n    display: flex;\n    max-width: 1200px;\n    width: 100%;\n    margin: auto;\n\n    > .cat-container {\n      flex: 1;\n      padding-top: 128px;\n      display: flex;\n\n      &:first-of-type {\n        padding-right: 120px;\n        justify-content: flex-end;\n      }\n\n      &:last-of-type {\n        padding-left: 120px;\n        justify-content: flex-start;\n      }\n    }\n\n    > .ranking-link-container {\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      margin: auto;\n      height: 40px;\n      width: 180px;\n      background-image: linear-gradient(to top right, #3579d7, #3f6bdf, #585ae1, #7640de, #9400d3);\n      color: #ffffff;\n      border-top-left-radius: 4px;\n      border-top-right-radius: 4px;\n      box-shadow: var(--box-shadow);\n\n      > a {\n        display: flex;\n        height: 100%;\n        width: 100%;\n        align-items: center;\n        justify-content: center;\n      }\n    }\n  }\n`;\n\nconst variants = {\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.4,\n    },\n  },\n  exit: {\n    opacity: 0,\n  },\n};\n\nconst leftVariants = {\n  tap: {\n    scale: 1.2,\n  },\n  init: {\n    opacity: 0,\n    x: -200,\n  },\n  enter: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      duration: 1,\n      x: { type: 'spring', stiffness: 400, damping: 35 },\n    },\n  },\n  exit: {\n    opacity: 0,\n    x: -200,\n    transition: {\n      duration: 0.25,\n    },\n  },\n};\n\nconst rightVariants = {\n  tap: {\n    scale: 1.3,\n  },\n  init: {\n    opacity: 0,\n    x: 200,\n  },\n  enter: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      duration: 1,\n      x: { type: 'spring', stiffness: 400, damping: 35 },\n    },\n  },\n  exit: {\n    opacity: 0,\n    x: 200,\n    transition: {\n      duration: 0.25,\n    },\n  },\n};\n\nexport const Mash: React.FC = () => {\n  const { mash, nextMash } = useApp();\n  const left = mash?.left as CatType;\n  const right = mash?.right as CatType;\n\n  const handleClick = useCallback(\n    (id: number | undefined) => {\n      console.log(id);\n      nextMash();\n    },\n    [nextMash],\n  );\n\n  return (\n    <motion.section animate=\"enter\" exit=\"exit\" variants={variants} className={styles}>\n      <header>\n        <img src={catLogo} alt=\"Logo CatMash\" />\n      </header>\n      <main>\n        <div className=\"cat-container\">\n          <AnimatePresence exitBeforeEnter>\n            <Cat {...left} onClick={handleClick} key={left.id} variants={leftVariants} />\n          </AnimatePresence>\n        </div>\n        <div className=\"cat-container\">\n          <AnimatePresence exitBeforeEnter>\n            <Cat {...right} onClick={handleClick} key={right.id} variants={rightVariants} />\n          </AnimatePresence>\n        </div>\n        <div className=\"ranking-link-container\">\n          <Link to=\"/ranking\">Voir le classement</Link>\n        </div>\n      </main>\n    </motion.section>\n  );\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport { motion, Variant } from 'framer-motion';\nimport { Cat, ScrollView } from 'components';\nimport { useApp } from 'stores';\n\nconst styles = css`\n  overflow: hidden;\n\n  h1 {\n    font-size: 2rem;\n    text-align: center;\n    margin: 4rem;\n  }\n\n  ul {\n    width: 100%;\n    display: grid;\n    grid-template-columns: repeat(4, auto);\n    grid-gap: var(--spacing-unit-3);\n    grid-auto-rows: auto;\n    justify-content: center;\n    margin-bottom: 64px;\n\n    @media (min-width: 992px) {\n      grid-template-columns: repeat(6, auto);\n    }\n\n    @media (min-width: 1200px) {\n      grid-template-columns: repeat(8, auto);\n    }\n\n    > li {\n      display: flex;\n      flex-direction: column;\n\n      > span {\n        padding: var(--spacing-unit-2);\n        text-align: center;\n      }\n\n      > .cat {\n        height: 100px;\n        width: 100px;\n      }\n\n      &:nth-child(1) > .cat {\n        background-color: goldenrod;\n      }\n\n      &:nth-child(2) > .cat {\n        background-color: silver;\n      }\n\n      &:nth-child(3) > .cat {\n        background-color: #905923;\n      }\n    }\n  }\n`;\n\nconst variants = {\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.4,\n    },\n  },\n  exit: {\n    opacity: 0,\n  },\n};\n\nconst listVariants = {\n  enter: {\n    transition: { staggerChildren: 0.07 },\n  } as Variant,\n  exit: {\n    transition: { staggerChildren: 0.05, staggerDirection: -1 },\n  } as Variant,\n};\n\nconst itemVariants = {\n  enter: (position: number): any => ({\n    y: 0,\n    opacity: 1,\n    transition: {\n      delay: position * 0.03,\n      duration: 0.25,\n      y: { stiffness: 1000, velocity: -100 },\n    },\n  }),\n  exit: {\n    y: 50,\n    opacity: 0,\n    transition: {\n      y: { stiffness: 1000 },\n    },\n  },\n};\n\nexport const Ranking: React.FC = () => {\n  const { cats } = useApp();\n\n  return (\n    <ScrollView>\n      <motion.section className={styles} animate=\"enter\" exit=\"exit\" variants={variants}>\n        <main>\n          <div>\n            <h1>Classement des chats les plus mignons</h1>\n          </div>\n          <motion.ul animate=\"enter\" exit=\"exit\" variants={listVariants} key=\"list\" layoutTransition>\n            {cats.map((cat, index) => (\n              <motion.li\n                key={cat.id}\n                animate=\"enter\"\n                exit=\"exit\"\n                variants={itemVariants}\n                custom={index}\n                layoutTransition\n              >\n                <Cat {...cat} />\n                <span>{index + 1}</span>\n              </motion.li>\n            ))}\n          </motion.ul>\n        </main>\n      </motion.section>\n    </ScrollView>\n  );\n};\n","import React from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { css } from 'emotion';\nimport { useLocation, Route, Switch } from 'react-router-dom';\nimport { Mash } from './Mash';\nimport { Ranking } from './Ranking';\n\nconst styles = css`\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n\n  section {\n    display: flex;\n    flex-direction: column;\n\n    > header {\n      height: 160px;\n      padding: var(--spacing-unit-2);\n      flex-shrink: 0;\n\n      > img {\n        display: block;\n        height: 100%;\n        margin: auto;\n      }\n    }\n\n    > main {\n      height: 100%;\n      overflow: hidden;\n    }\n  }\n`;\n\nconst variants = {\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.4,\n    },\n  },\n  exit: {\n    opacity: 0,\n  },\n};\n\nexport const Root: React.FC = () => {\n  const location = useLocation();\n\n  return (\n    <motion.div className={styles} initial=\"exit\" animate=\"enter\" exit=\"exit\" variants={variants}>\n      <AnimatePresence exitBeforeEnter>\n        <Switch location={location} key={location.pathname}>\n          <Route exact path=\"/\" component={Mash} />\n          <Route exact path=\"/ranking\" component={Ranking} />\n        </Switch>\n      </AnimatePresence>\n    </motion.div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from 'app';\nimport * as serviceWorker from 'serviceWorker';\nimport { AppProvider } from 'stores';\n\nReactDOM.render(\n  <AppProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AppProvider>,\n  document.getElementById('root'),\n);\n\nsetTimeout(() => {\n  document.body.style.transition = 'background-color 0.3s ease, color 0.3s ease';\n}, 1000);\n\nserviceWorker.unregister();\n","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport { AnimatePresence } from 'framer-motion';\nimport { APP_STATE, useApp } from 'stores/App';\nimport { LoadingPage } from './LoadingPage';\nimport { Root } from './Root';\n\nconst TRANSITION = 2500;\n\nexport const App: React.FC = () => {\n  useDarkMode();\n  const { appState } = useApp();\n\n  return (\n    <AnimatePresence initial={false} exitBeforeEnter>\n      {(appState === APP_STATE.LOADING || appState === APP_STATE.INITIALISING) && (\n        <LoadingPage\n          key={APP_STATE.LOADING}\n          timeout={TRANSITION}\n          label={appState === APP_STATE.INITIALISING ? 'Création des profils...' : undefined}\n        />\n      )}\n      {appState === APP_STATE.READY && <Root key={APP_STATE.READY} />}\n    </AnimatePresence>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/loader.9471402a.gif\";"],"sourceRoot":""}