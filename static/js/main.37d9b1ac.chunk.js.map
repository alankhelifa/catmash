{"version":3,"sources":["assets/loader.gif","assets/cat-logo.png","database/index.ts","stores/elo-utils.ts","stores/App.tsx","components/BackButton/BackButton.tsx","components/Cat/Cat.tsx","components/ProgressBar/ProgressBar.tsx","components/ScrollView/ScrollView.tsx","components/Tooltip/Tooltip.tsx","app/LoadingPage/LoadingPage.tsx","app/Root/Mash/index.tsx","app/Root/Ranking/index.tsx","app/Root/CatDetails/index.tsx","app/Root/index.tsx","serviceWorker.js","index.tsx","app/index.tsx"],"names":["module","exports","cats","version","stores","table","Dexie","probability","rating1","rating2","Math","pow","updateElo","winnerElo","loserElo","pWinner","value","pLoser","newWinnerEloValue","newLoserEloValue","date","Date","winner","loser","random","i","floor","APP_STATE","AppContext","React","createContext","appState","mash","nextMash","updateScore","Promise","resolve","getCats","getCat","useApp","useContext","variants","initial","x","opacity","enter","exit","styles","css","BackButton","to","span","animate","className","Cat","id","image","onClick","handleClick","useCallback","div","cx","whileTap","style","backgroundImage","progressVariants","init","width","duration","transition","type","ease","ProgressBar","custom","ScrollView","children","tooltipStyles","Tooltip","payload","active","LoadingPage","label","timeout","src","loadingGif","alt","leftVariants","tap","scale","stiffness","damping","rightVariants","Mash","left","right","then","section","catLogo","exitBeforeEnter","key","listVariants","staggerChildren","staggerDirection","itemVariants","position","y","delay","velocity","catVariants","spring","Ranking","useState","setCats","useEffect","load","db","on","unsubscribe","ul","slice","map","cat","index","li","positionTransition","rankVariants","chartVariants","CatDetails","useParams","setCat","parseInt","subscription","changes","find","change","rank","height","data","eloEvolution","elo","x1","y1","x2","y2","offset","stopColor","stopOpacity","isAnimationActive","filterNull","content","strokeDasharray","vertical","strokeWidth","dataKey","domain","stroke","fill","fillOpacity","dot","Root","location","useLocation","pathname","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","setAppState","setMash","winnerId","a","async","undefined","currentElo","newElos","update","concat","reverse","sortBy","catIndex","findIndex","leftPosition","length","min","setTimeout","count","bulkAdd","catsData","toArray","Provider","useDarkMode","document","getElementById","body","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.37d9b1ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.9471402a.gif\";","module.exports = __webpack_public_path__ + \"static/media/cat-logo.8fe55bbb.png\";","import Dexie from 'dexie';\nimport 'dexie-observable';\nimport { Cat } from 'types/cat';\n\nclass CatMashDatabase extends Dexie {\n  cats: Dexie.Table<Cat, number>;\n\n  constructor() {\n    super('CatMashDB');\n    this.version(1).stores({\n      cats: '++id, image, currentElo, *eloEvolution',\n    });\n    this.cats = this.table('cats');\n  }\n}\n\nexport default new CatMashDatabase();\n","import { Elo, EloResult } from 'types/Elo';\n\nconst K = 30;\n\nexport const probability = (rating1: number, rating2: number): number => {\n  return 1.0 / (1 + Math.pow(10, (rating1 - rating2) / 400));\n};\n\nexport const updateElo = (winnerElo: Elo, loserElo: Elo): EloResult => {\n  const pWinner = probability(winnerElo.value, loserElo.value);\n  const pLoser = probability(loserElo.value, winnerElo.value);\n\n  const newWinnerEloValue = winnerElo.value + K * (1 - pWinner);\n  const newLoserEloValue = loserElo.value + K * (0 - pLoser);\n\n  const date = new Date();\n  return {\n    winner: { value: newWinnerEloValue, date },\n    loser: { value: newLoserEloValue, date },\n  };\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Cat, Cats } from 'types/cat';\nimport db from 'database';\nimport catsData from 'assets/cats.json';\nimport { Elo } from 'types/Elo';\nimport { Mash } from 'types/Mash';\nimport { updateElo } from './elo-utils';\n\nconst START_ELO = 1000;\nexport const LOADING_SCREEN_DURATION = 1500;\n\nconst init = async (): Promise<Cats> => {\n  const currentElo: Elo = { value: START_ELO, date: new Date() };\n  const eloEvolution = [currentElo];\n\n  await db.cats.bulkAdd(\n    // Auto-incremented id\n    // eslint-disable-next-line\n    // @ts-ignore\n    catsData.map(image => ({\n      image,\n      currentElo,\n      eloEvolution,\n    })),\n  );\n\n  return new Promise<Cats>(resolve => {\n    setTimeout(() => {\n      resolve(db.cats.toArray());\n    }, 1200);\n  });\n};\n\nconst random = (i: number): number => {\n  return Math.floor(Math.random() * i);\n};\n\nexport const APP_STATE = {\n  LOADING: 'loading',\n  INITIALISING: 'init',\n  READY: 'ready',\n};\n\ntype AppContextType = {\n  appState: string;\n  getCats: () => Promise<Cats>;\n  getCat: (id: number) => Promise<Cat | undefined>;\n  mash?: Mash;\n  nextMash: Function;\n  updateScore: (winnerId: number) => Promise<void>;\n};\n\nexport const AppContext = React.createContext<AppContextType>({\n  appState: APP_STATE.LOADING,\n  mash: {} as Mash,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  nextMash: () => {},\n  updateScore: () => Promise.resolve(),\n  getCats: () => Promise.resolve([] as Cats),\n  getCat: () => Promise.resolve({} as Cat),\n});\n\nexport const AppProvider: React.FC = ({ children }) => {\n  const [appState, setAppState] = useState(APP_STATE.LOADING);\n  const [mash, setMash] = useState<Mash>();\n\n  const updateScore = useCallback(\n    async (winnerId: number) => {\n      if (mash !== undefined) {\n        const winner = mash.left.id === winnerId ? mash.left : mash.right;\n        const loser = mash.left.id !== winnerId ? mash.left : mash.right;\n\n        if (winner.currentElo && loser.currentElo) {\n          const newElos = updateElo(winner.currentElo, loser.currentElo);\n          await db.cats.update(winner.id, {\n            currentElo: newElos.winner,\n            eloEvolution: winner.eloEvolution.concat(newElos.winner),\n          });\n          await db.cats.update(loser.id, {\n            currentElo: newElos.loser,\n            eloEvolution: loser.eloEvolution.concat(newElos.loser),\n          });\n        }\n      }\n    },\n    [mash],\n  );\n\n  const getCats = useCallback((): Promise<Cats> => {\n    return db.cats.reverse().sortBy('currentElo.value');\n  }, []);\n\n  const getCat = useCallback(\n    (id): Promise<Cat | undefined> => {\n      return getCats().then(cats => {\n        const catIndex = cats.findIndex(cat => cat.id === id);\n        if (catIndex === -1) {\n          return undefined;\n        }\n        cats[catIndex].rank = catIndex + 1;\n        return cats[catIndex];\n      });\n    },\n    [getCats],\n  );\n\n  const nextMash = useCallback(() => {\n    getCats().then(cats => {\n      const leftPosition = random(cats.length);\n      const left = cats[leftPosition];\n      const right =\n        cats[\n          leftPosition === cats.length - 1\n            ? leftPosition - random(8) - 1\n            : Math.min(leftPosition + random(8) + 1, cats.length - 1)\n        ];\n      setMash({ left, right });\n    });\n  }, [getCats]);\n\n  useEffect(() => {\n    if (appState === APP_STATE.LOADING) {\n      new Promise<number>(resolve => {\n        setTimeout(() => {\n          resolve(db.cats.count());\n        }, LOADING_SCREEN_DURATION);\n      }).then(count => {\n        if (count === 0) {\n          setAppState(APP_STATE.INITIALISING);\n        } else {\n          nextMash();\n          setAppState(APP_STATE.READY);\n        }\n      });\n    } else if (appState === APP_STATE.INITIALISING) {\n      init().then(() => {\n        nextMash();\n        setAppState(APP_STATE.READY);\n      });\n    }\n  }, [appState, nextMash]);\n\n  return (\n    <AppContext.Provider value={{ appState, mash, nextMash, getCat, getCats, updateScore }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = (): AppContextType => React.useContext(AppContext);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { css } from 'emotion';\nimport { motion } from 'framer-motion';\n\ninterface Props {\n  to: string;\n}\n\nconst variants = {\n  initial: {\n    x: 75,\n    opacity: 0,\n  },\n  enter: {\n    x: 0,\n    opacity: 1,\n  },\n  exit: {\n    x: -75,\n    opacity: 0,\n  },\n};\n\nconst styles = css`\n  position: absolute;\n  top: var(--spacing-unit-3);\n  left: var(--spacing-unit-3);\n  height: 48px;\n  width: 48px;\n  user-select: none;\n\n  > a {\n    display: flex;\n    font-size: 3rem;\n    height: 100%;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    background: -webkit-linear-gradient(0deg, #3579d7, #3f6bdf, #585ae1, #7640de, #9400d3);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n`;\n\nexport const BackButton: React.FC<Props> = ({ to }) => {\n  return (\n    <motion.span initial=\"initial\" animate=\"enter\" exit=\"exit\" className={styles} variants={variants}>\n      <Link to={to}>←</Link>\n    </motion.span>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { css, cx } from 'emotion';\nimport { motion, Variants } from 'framer-motion';\n\nconst styles = css`\n  height: 120px;\n  width: 120px;\n  padding: 6px;\n  border-radius: 50%;\n  background-image: linear-gradient(to top right, #3579d7, #3f6bdf, #585ae1, #7640de, #9400d3);\n  box-shadow: var(--box-shadow);\n\n  @media screen and (min-width: 992px) {\n    height: 240px;\n    width: 240px;\n  }\n\n  &.clickable {\n    cursor: pointer;\n  }\n\n  > div {\n    height: 100%;\n    width: 100%;\n    background-size: cover;\n    background-repeat: no-repeat;\n    border-radius: 50%;\n  }\n`;\n\ninterface Props {\n  className?: string;\n  id: number;\n  image: string;\n  onClick?: (id: number) => void;\n  variants?: Variants;\n}\n\nexport const Cat: React.FC<Props> = ({ className, id, image, onClick, variants }) => {\n  const handleClick = useCallback(() => {\n    if (typeof onClick === 'function') {\n      onClick(id);\n    }\n  }, [id, onClick]);\n\n  return (\n    <motion.div\n      className={cx(styles, className, typeof onClick === 'function' && 'clickable', 'cat')}\n      onClick={handleClick}\n      initial=\"init\"\n      animate=\"enter\"\n      exit=\"exit\"\n      whileTap=\"tap\"\n      variants={variants}\n    >\n      <div style={{ backgroundImage: `url(${image})` }} />\n    </motion.div>\n  );\n};\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { css, cx } from 'emotion';\n\nconst progressVariants = {\n  init: { width: 0 },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  animate: (duration: number): any => ({\n    width: '100%',\n    transition: {\n      type: 'tween',\n      ease: 'linear',\n      duration: duration / 1000,\n    },\n  }),\n};\n\nconst styles = css`\n  width: 60%;\n  max-width: 360px;\n  height: 3px;\n  background-color: var(--secondary-color);\n  position: relative;\n  border-radius: 2px;\n\n  > .progress-bar {\n    position: absolute;\n    height: 100%;\n    background-image: linear-gradient(to right, #3579d7, #3f6bdf, #585ae1, #7640de, #9400d3);\n    border-radius: 2px;\n  }\n`;\n\ninterface Props {\n  duration: number;\n}\n\nexport const ProgressBar: React.FC<Props> = ({ duration }) => {\n  return (\n    <div className={cx(styles, 'progress')}>\n      <motion.div\n        animate=\"animate\"\n        initial=\"init\"\n        className=\"progress-bar\"\n        variants={progressVariants}\n        custom={duration}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { css, cx } from 'emotion';\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\ninterface Props {\n  className?: string;\n}\n\nconst styles = css`\n  height: 100%;\n  max-width: 100%;\n  .simplebar-scrollbar {\n    width: 4px;\n    &.simplebar-visible::before {\n      opacity: 1;\n    }\n    &::before {\n      background-image: linear-gradient(to bottom, #3579d7, #3f6bdf, #585ae1, #7640de, #9400d3);;\n      width: 4px;\n    },\n  },\n`;\n\nexport const ScrollView: React.FC<Props> = ({ className, children }) => {\n  return <SimpleBar className={cx(styles, className)} children={children} />;\n};\n","import React from 'react';\nimport { TooltipProps } from 'recharts';\nimport { css } from 'emotion';\n\nconst tooltipStyles = css`\n  background-color: var(--primary-color);\n  color: var(--text-color);\n  box-shadow: var(--raised-box-shadow);\n  padding: var(--spacing-unit-3);\n  border-radius: 4px;\n`;\n\nexport const Tooltip: React.FC<TooltipProps> = ({ payload, active }) => {\n  if (active && payload) {\n    return (\n      <div className={tooltipStyles}>\n        <p>Score: {payload[0].payload.value}</p>\n      </div>\n    );\n  }\n\n  return null;\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport { motion } from 'framer-motion';\nimport loadingGif from 'assets/loader.gif';\nimport { ProgressBar } from 'components';\n\ninterface Props {\n  label?: string;\n  timeout: number;\n}\n\nconst styles = css`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  > img {\n    width: 60%;\n    max-width: 380px;\n  }\n\n  > .label {\n    margin-top: 50px;\n    height: 2rem;\n    font-size: 1.4rem;\n  }\n\n  > .progress {\n    margin-top: 50px;\n  }\n`;\n\nconst variants = {\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.4,\n    },\n  },\n  exit: {\n    opacity: 0,\n    transition: {\n      duration: 0.4,\n    },\n  },\n};\n\nexport const LoadingPage: React.FC<Props> = ({ label, timeout }) => {\n  return (\n    <motion.div className={styles} animate=\"enter\" exit=\"exit\" variants={variants}>\n      <img src={loadingGif} alt=\"Chargement...\" />\n      <div className=\"label\">{label}</div>\n      <ProgressBar duration={timeout} />\n    </motion.div>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { css } from 'emotion';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport catLogo from 'assets/cat-logo.png';\nimport { useApp } from 'stores';\nimport { Cat } from 'components';\nimport { Cat as CatType } from 'types/cat';\n\nconst styles = css`\n  height: 100%;\n\n  > main {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    max-width: 800px;\n    width: 100%;\n    margin: auto;\n    overflow: visible !important;\n\n    h2 {\n      margin: 3rem;\n      text-align: center;\n    }\n\n    > div {\n      display: flex;\n      justify-content: space-evenly;\n\n      > .cat-container {\n        padding-top: 80px;\n      }\n    }\n\n    > .ranking-link-container {\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      margin: auto;\n      height: 40px;\n      width: 180px;\n      background-image: linear-gradient(to top right, #3579d7, #3f6bdf, #585ae1, #7640de, #9400d3);\n      color: #ffffff;\n      border-top-left-radius: 4px;\n      border-top-right-radius: 4px;\n      box-shadow: var(--box-shadow);\n\n      > a {\n        display: flex;\n        height: 100%;\n        width: 100%;\n        align-items: center;\n        justify-content: center;\n      }\n    }\n  }\n`;\n\nconst variants = {\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.4,\n    },\n  },\n  exit: {\n    opacity: 0,\n  },\n};\n\nconst leftVariants = {\n  tap: {\n    scale: 1.2,\n  },\n  init: {\n    opacity: 0,\n    x: -200,\n  },\n  enter: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      duration: 1,\n      x: { type: 'spring', stiffness: 400, damping: 35 },\n    },\n  },\n  exit: {\n    opacity: 0,\n    x: -200,\n    transition: {\n      duration: 0.25,\n    },\n  },\n};\n\nconst rightVariants = {\n  tap: {\n    scale: 1.3,\n  },\n  init: {\n    opacity: 0,\n    x: 200,\n  },\n  enter: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      duration: 1,\n      x: { type: 'spring', stiffness: 400, damping: 35 },\n    },\n  },\n  exit: {\n    opacity: 0,\n    x: 200,\n    transition: {\n      duration: 0.25,\n    },\n  },\n};\n\nexport const Mash: React.FC = () => {\n  const { mash, nextMash, updateScore } = useApp();\n  const left = mash?.left as CatType;\n  const right = mash?.right as CatType;\n\n  const handleClick = useCallback(\n    (id: number) => {\n      updateScore(id).then(() => nextMash());\n    },\n    [nextMash, updateScore],\n  );\n\n  return (\n    <motion.section animate=\"enter\" exit=\"exit\" variants={variants} className={styles}>\n      <header>\n        <img src={catLogo} alt=\"Logo CatMash\" />\n        <h1>CatMash</h1>\n      </header>\n      <main>\n        <h2>Choisissez le chat le plus mignon</h2>\n        {left && (\n          <div>\n            <div className=\"cat-container\">\n              <AnimatePresence exitBeforeEnter>\n                <Cat {...left} onClick={handleClick} key={left.id} variants={leftVariants} />\n              </AnimatePresence>\n            </div>\n            <div className=\"cat-container\">\n              <AnimatePresence exitBeforeEnter>\n                <Cat {...right} onClick={handleClick} key={right.id} variants={rightVariants} />\n              </AnimatePresence>\n            </div>\n          </div>\n        )}\n        <div className=\"ranking-link-container\">\n          <Link to=\"/ranking\">Voir le classement</Link>\n        </div>\n      </main>\n    </motion.section>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { css } from 'emotion';\nimport { motion, Variant } from 'framer-motion';\nimport { BackButton, Cat, ScrollView } from 'components';\nimport { useApp } from 'stores';\nimport { Cats } from 'types/cat';\nimport { Link } from 'react-router-dom';\nimport db from 'database';\n\nconst styles = css`\n  overflow: hidden;\n\n  main {\n    h1 {\n      font-size: 2rem;\n      text-align: center;\n      margin: 4rem;\n      background: -webkit-linear-gradient(0deg, #3579d7, #3f6bdf, #585ae1, #7640de, #9400d3);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n\n    .cat {\n      background-image: none;\n      background-color: var(--secondary-color);\n    }\n\n    ul > li > a {\n      border-radius: 50%;\n    }\n\n    ul.podium {\n      display: flex;\n      flex-wrap: wrap;\n      width: 100%;\n      max-width: 1000px;\n      margin: auto auto var(--spacing-unit-5);\n\n      li {\n        display: flex;\n        justify-content: center;\n\n        &:nth-child(1) {\n          width: 100%;\n          > a > .cat {\n            background-color: goldenrod;\n          }\n        }\n\n        &:nth-child(2) {\n          width: 50%;\n          > a > .cat {\n            background-color: silver;\n          }\n        }\n\n        &:nth-child(3) {\n          width: 50%;\n          > a > .cat {\n            background-color: #905923;\n          }\n        }\n      }\n    }\n\n    ul.list {\n      width: 100%;\n      display: grid;\n      grid-template-columns: repeat(3, auto);\n      grid-gap: var(--spacing-unit-3);\n      grid-auto-rows: auto;\n      justify-content: center;\n      margin-bottom: 64px;\n\n      @media (min-width: 500px) {\n        grid-template-columns: repeat(4, auto);\n      }\n\n      @media (min-width: 992px) {\n        grid-template-columns: repeat(6, auto);\n      }\n\n      @media (min-width: 1200px) {\n        grid-template-columns: repeat(8, auto);\n      }\n\n      > li {\n        display: flex;\n        flex-direction: column;\n\n        > span {\n          padding: var(--spacing-unit-2);\n          text-align: center;\n        }\n\n        > a > .cat {\n          height: 100px;\n          width: 100px;\n        }\n      }\n    }\n  }\n`;\n\nconst variants = {\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.4,\n    },\n  },\n  exit: {\n    opacity: 0,\n  },\n};\n\nconst listVariants = {\n  enter: {\n    transition: { staggerChildren: 0.07 },\n  } as Variant,\n  exit: {\n    transition: { staggerChildren: 0.05, staggerDirection: -1 },\n  } as Variant,\n};\n\nconst itemVariants = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  enter: (position: number): any => ({\n    y: 0,\n    opacity: 1,\n    transition: {\n      delay: position * 0.03,\n      duration: 0.25,\n      y: { stiffness: 1000, velocity: -100 },\n    },\n  }),\n  exit: {\n    y: 50,\n    opacity: 0,\n    transition: {\n      y: { stiffness: 1000 },\n    },\n  },\n};\n\nconst catVariants = {\n  tap: {\n    scale: 1.2,\n  },\n};\n\nconst spring = {\n  type: 'spring',\n  damping: 60,\n  stiffness: 300,\n};\n\nexport const Ranking: React.FC = () => {\n  const { getCats } = useApp();\n  const [cats, setCats] = useState<Cats>();\n\n  useEffect(() => {\n    const load = (): void => {\n      getCats().then(setCats);\n    };\n\n    load();\n    db.on('changes', load);\n\n    return (): void => db.on('changes').unsubscribe(load);\n  }, [getCats]);\n\n  return (\n    <ScrollView>\n      <motion.section className={styles} animate=\"enter\" exit=\"exit\" variants={variants}>\n        <main>\n          <BackButton to=\"/\" />\n          <div>\n            <h1>Classement des chats les plus mignons</h1>\n          </div>\n          <motion.ul className=\"podium\" animate=\"enter\" exit=\"exit\" variants={listVariants} key=\"podium\">\n            {cats &&\n              cats.slice(0, 3).map((cat, index) => (\n                <motion.li\n                  key={cat.id}\n                  initial=\"exit\"\n                  animate=\"enter\"\n                  exit=\"exit\"\n                  variants={itemVariants}\n                  custom={index}\n                  positionTransition={spring}\n                >\n                  <Link to={`/cat/${cat.id}`}>\n                    <Cat {...cat} variants={catVariants} />\n                  </Link>\n                </motion.li>\n              ))}\n          </motion.ul>\n          <motion.ul className=\"list\" animate=\"enter\" exit=\"exit\" variants={listVariants} key=\"list\">\n            {cats &&\n              cats.slice(3).map((cat, index) => (\n                <motion.li\n                  key={cat.id}\n                  initial=\"exit\"\n                  animate=\"enter\"\n                  exit=\"exit\"\n                  variants={itemVariants}\n                  custom={index}\n                  positionTransition={spring}\n                >\n                  <Link to={`/cat/${cat.id}`}>\n                    <Cat {...cat} variants={catVariants} />\n                  </Link>\n                  <span>{index + 4}</span>\n                </motion.li>\n              ))}\n          </motion.ul>\n        </main>\n      </motion.section>\n    </ScrollView>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { css } from 'emotion';\nimport { useParams } from 'react-router-dom';\nimport { CartesianGrid, ResponsiveContainer, XAxis, YAxis, AreaChart, Area, Tooltip as ChartTooltip } from 'recharts';\nimport { IDatabaseChange } from 'dexie-observable/api';\nimport db from 'database';\nimport { useApp } from 'stores';\nimport { BackButton, Cat, ScrollView, Tooltip } from 'components';\nimport { Cat as CatType } from 'types/cat';\n\nconst variants = {\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.4,\n    },\n  },\n  exit: {\n    opacity: 0,\n  },\n};\n\nconst catVariants = {\n  init: {\n    y: -60,\n    opacity: 0,\n  },\n  enter: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      duration: 0.4,\n    },\n  },\n  exit: {\n    opacity: 0,\n  },\n};\n\nconst rankVariants = {\n  init: {\n    x: -100,\n    opacity: 0,\n  },\n  enter: {\n    x: 0,\n    opacity: 1,\n    transition: {\n      duration: 0.4,\n    },\n  },\n  exit: {\n    opacity: 0,\n  },\n};\n\nconst chartVariants = {\n  init: {\n    scale: 0.4,\n    opacity: 0,\n  },\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      duration: 0.4,\n    },\n  },\n  exit: {\n    opacity: 0,\n  },\n};\n\nconst styles = css`\n  overflow: hidden;\n\n  > main {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    > .cat-container {\n      display: flex;\n      justify-content: space-evenly;\n      align-items: center;\n      width: 80%;\n      max-width: 1000px;\n      min-height: 300px;\n      margin: 60px auto 0;\n\n      span {\n        font-size: 5rem;\n\n        @media (min-width: 992px) {\n          font-size: 8rem;\n        }\n      }\n    }\n\n    > .score-container {\n      width: 100%;\n      max-width: 1000px;\n      margin: 40px auto;\n\n      > h1 {\n        font-size: 2rem;\n        background: -webkit-linear-gradient(0deg, #3579d7, #3f6bdf, #585ae1, #7640de, #9400d3);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n      }\n\n      > div {\n        margin-top: var(--spacing-unit-3);\n        padding: var(--spacing-unit-5) var(--spacing-unit-4) var(--spacing-unit-2) 0;\n        padding-bottom: var(--spacing-unit);\n        background-color: var(--secondary-color);\n        box-shadow: var(--box-shadow);\n        border-radius: 4px;\n      }\n    }\n  }\n`;\n\nexport const CatDetails: React.FC = () => {\n  const { getCat } = useApp();\n  const { id } = useParams();\n  const [cat, setCat] = useState<CatType>();\n\n  useEffect(() => {\n    const load = (): void => {\n      if (id) {\n        getCat(parseInt(id)).then(setCat);\n      }\n    };\n\n    const subscription = (changes: IDatabaseChange[]): void => {\n      if (id) {\n        const shouldReload = changes.find(change => change.key === parseInt(id));\n        if (shouldReload) {\n          load();\n        }\n      }\n    };\n\n    load();\n    db.on('changes', subscription);\n\n    return (): void => db.on('changes').unsubscribe(subscription);\n  }, [getCat, id]);\n\n  return (\n    <ScrollView>\n      <motion.section className={styles} animate=\"enter\" exit=\"exit\" variants={variants}>\n        <main>\n          <BackButton to=\"/ranking\" />\n          <div className=\"cat-container\">\n            {cat && (\n              <>\n                <Cat {...cat} variants={catVariants} />\n                <motion.span initial=\"init\" animate=\"enter\" exit=\"exit\" variants={rankVariants}>\n                  {cat.rank}\n                </motion.span>\n              </>\n            )}\n          </div>\n          <div className=\"score-container\">\n            <h1>Evolution du score</h1>\n            {cat && (\n              <motion.div initial=\"init\" animate=\"enter\" exit=\"exit\" variants={chartVariants}>\n                <ResponsiveContainer width=\"100%\" height={240}>\n                  <AreaChart data={cat.eloEvolution.map(elo => ({ ...elo, value: Math.floor(elo.value) }))}>\n                    <defs>\n                      <linearGradient id=\"value\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"var(--accent-color)\" stopOpacity={0.8} />\n                        <stop offset=\"100%\" stopColor=\"var(--accent-color)\" stopOpacity={0.2} />\n                      </linearGradient>\n                    </defs>\n                    <ChartTooltip isAnimationActive={false} filterNull content={<Tooltip />} />\n                    <CartesianGrid strokeDasharray=\"5\" vertical={false} strokeWidth={1} />\n                    <XAxis dataKey=\"date\" />\n                    <YAxis domain={['dataMin - 100', 'dataMax + 50']} />\n                    <Area\n                      type=\"monotone\"\n                      dataKey=\"value\"\n                      stroke=\"var(--accent-color)\"\n                      fill=\"url(#value)\"\n                      fillOpacity={1}\n                      strokeWidth={2}\n                      dot={{ fill: 'var(--text-color)', strokeWidth: 2 }}\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </motion.div>\n            )}\n          </div>\n        </main>\n      </motion.section>\n    </ScrollView>\n  );\n};\n","import React from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { css } from 'emotion';\nimport { useLocation, Route, Switch } from 'react-router-dom';\nimport { Mash } from './Mash';\nimport { Ranking } from './Ranking';\nimport { CatDetails } from './CatDetails';\n\nconst styles = css`\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n\n  section {\n    display: flex;\n    flex-direction: column;\n\n    > header {\n      height: 160px;\n      padding: var(--spacing-unit-2);\n      flex-shrink: 0;\n      position: relative;\n\n      > img {\n        display: block;\n        height: 100%;\n        margin: auto;\n        position: relative;\n        z-index: 2;\n      }\n\n      > h1 {\n        font-family: 'GrumpyCat', sans-serif;\n        font-size: 5rem;\n        display: block;\n        position: absolute;\n        bottom: -20px;\n        left: 0;\n        right: 0;\n        width: 400px;\n        text-align: center;\n        margin: auto;\n        z-index: 1;\n        background: -webkit-linear-gradient(0deg, #3579d7, #3f6bdf, #585ae1, #7640de, #9400d3);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n      }\n    }\n\n    > main {\n      height: 100%;\n      overflow: hidden;\n    }\n  }\n`;\n\nconst variants = {\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.4,\n    },\n  },\n  exit: {\n    opacity: 0,\n  },\n};\n\nexport const Root: React.FC = () => {\n  const location = useLocation();\n\n  return (\n    <motion.div className={styles} initial=\"exit\" animate=\"enter\" exit=\"exit\" variants={variants}>\n      <AnimatePresence exitBeforeEnter>\n        <Switch location={location} key={location.pathname}>\n          <Route exact path=\"/\" component={Mash} />\n          <Route exact path=\"/ranking\" component={Ranking} />\n          <Route exact path=\"/cat/:id\" component={CatDetails} />\n        </Switch>\n      </AnimatePresence>\n    </motion.div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from 'app';\nimport * as serviceWorker from 'serviceWorker';\nimport { AppProvider } from 'stores';\n\nReactDOM.render(\n  <AppProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AppProvider>,\n  document.getElementById('root'),\n);\n\nsetTimeout(() => {\n  document.body.style.transition = 'background-color 0.3s ease, color 0.3s ease';\n}, 1000);\n\nserviceWorker.unregister();\n","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport { AnimatePresence } from 'framer-motion';\nimport { APP_STATE, LOADING_SCREEN_DURATION, useApp } from 'stores/App';\nimport { LoadingPage } from './LoadingPage';\nimport { Root } from './Root';\n\nexport const App: React.FC = () => {\n  useDarkMode();\n  const { appState } = useApp();\n\n  return (\n    <AnimatePresence initial={false} exitBeforeEnter>\n      {(appState === APP_STATE.LOADING || appState === APP_STATE.INITIALISING) && (\n        <LoadingPage\n          key={APP_STATE.LOADING}\n          timeout={LOADING_SCREEN_DURATION}\n          label={appState === APP_STATE.INITIALISING ? 'Création des profils...' : undefined}\n        />\n      )}\n      {appState === APP_STATE.READY && <Root key={APP_STATE.READY} />}\n    </AnimatePresence>\n  );\n};\n"],"sourceRoot":""}